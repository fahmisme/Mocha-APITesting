{
  "stats": {
    "suites": 2,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2022-08-10T05:12:39.534Z",
    "end": "2022-08-10T05:12:39.737Z",
    "duration": 203,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "a0b4b4a8-a0b3-44ff-9a41-b9a5915008be",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7667ad16-7d08-4ae9-a5b1-1841c21ccc64",
          "title": "Get User",
          "fullFile": "E:\\My Class\\Fazztrack\\w3-1\\reviewAPI\\testcases\\getUser.js",
          "file": "\\testcases\\getUser.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Get User\"",
              "fullTitle": "Get User \"before all\" hook in \"Get User\"",
              "timedOut": false,
              "duration": 2,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log('Preparing data..');",
              "err": {},
              "uuid": "b1a05347-a69a-4a2d-b847-68f5979878f3",
              "parentUUID": "7667ad16-7d08-4ae9-a5b1-1841c21ccc64",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook in \"Get User\"",
              "fullTitle": "Get User \"before each\" hook in \"Get User\"",
              "timedOut": false,
              "duration": 13,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let dataDummy = require('../testData/dummyData.json')\nlet response = await connectAPI.postData(dataDummy);\nconsole.log('Users 1 created');\nlet dataDummy2 = require('../testData/dummyData2.json')\nresponse = await connectAPI.postData(dataDummy2);\nconsole.log('Users 2 created');\nidData = response.body.id;",
              "err": {},
              "uuid": "6b9dca46-ee43-4015-a054-2afc16f308ef",
              "parentUUID": "7667ad16-7d08-4ae9-a5b1-1841c21ccc64",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Get User\"",
              "fullTitle": "Get User \"after all\" hook in \"Get User\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log('Deleting all data..');",
              "err": {},
              "uuid": "f4115ace-b147-4ee2-8912-4acb386593ad",
              "parentUUID": "7667ad16-7d08-4ae9-a5b1-1841c21ccc64",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"Get User\"",
              "fullTitle": "Get User \"after each\" hook in \"Get User\"",
              "timedOut": false,
              "duration": 36,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let response = await connectAPI.deleteData();\nexpect(response.statusCode).to.equal(200);",
              "err": {},
              "uuid": "ca409c13-9573-4981-a74d-88332d068b57",
              "parentUUID": "7667ad16-7d08-4ae9-a5b1-1841c21ccc64",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Get user with valid data",
              "fullTitle": "Get User Get user with valid data",
              "timedOut": false,
              "duration": 14,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let response = await connectAPI.getData(idData);\nexpect(response.statusCode).to.equal(200);\nexpect(response.body).has.jsonSchema(jsonSchema);\n//chai-things and chai-like\nexpect(response.body.hobbies).contains.something.like('Read a mystery book')",
              "err": {},
              "uuid": "91814c1b-2409-4172-953c-5d0ceb1b946e",
              "parentUUID": "7667ad16-7d08-4ae9-a5b1-1841c21ccc64",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get user with invalid data",
              "fullTitle": "Get User Get user with invalid data",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let idInput = \"b27581ce-0a73-4890-8d47\";\nlet response = await connectAPI.getData(idInput);\nexpect(response.statusCode).to.not.equal(200);\nexpect(response.body.id).to.not.equal(idInput);\nexpect(response.body.errorCode).equal('ER-01');\nexpect(response.body.message).equal('user not found');",
              "err": {},
              "uuid": "4804be8d-fc7c-485d-84f3-ba7411b21ea7",
              "parentUUID": "7667ad16-7d08-4ae9-a5b1-1841c21ccc64",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "91814c1b-2409-4172-953c-5d0ceb1b946e",
            "4804be8d-fc7c-485d-84f3-ba7411b21ea7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 23,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ff994565-edcb-42b1-8191-2271ac414d19",
          "title": "Put User",
          "fullFile": "E:\\My Class\\Fazztrack\\w3-1\\reviewAPI\\testcases\\putUser.js",
          "file": "\\testcases\\putUser.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Put User\"",
              "fullTitle": "Put User \"before all\" hook in \"Put User\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log('Preparing data..');",
              "err": {},
              "uuid": "f5333914-504b-43ed-b738-863aebf5f1e2",
              "parentUUID": "ff994565-edcb-42b1-8191-2271ac414d19",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook in \"Put User\"",
              "fullTitle": "Put User \"before each\" hook in \"Put User\"",
              "timedOut": false,
              "duration": 11,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let dataDummy = require('../testData/dummyData.json')\nlet response = await connectAPI.postData(dataDummy);\nconsole.log('Users 1 created');\nlet dataDummy2 = require('../testData/dummyData2.json')\nresponse = await connectAPI.postData(dataDummy2);\nconsole.log('Users 2 created');\nidData = response.body.id;",
              "err": {},
              "uuid": "48a58934-8a21-4ebd-9c32-e38251dd040a",
              "parentUUID": "ff994565-edcb-42b1-8191-2271ac414d19",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Put User\"",
              "fullTitle": "Put User \"after all\" hook in \"Put User\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log('Deleting all data..');",
              "err": {},
              "uuid": "faf6980a-4a69-4d9d-b829-9515f99168b7",
              "parentUUID": "ff994565-edcb-42b1-8191-2271ac414d19",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"Put User\"",
              "fullTitle": "Put User \"after each\" hook in \"Put User\"",
              "timedOut": false,
              "duration": 5,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let response = await connectAPI.deleteData();\nexpect(response.statusCode).to.equal(200);",
              "err": {},
              "uuid": "056c744e-0c4f-4d1a-86be-f1d265a6c2f8",
              "parentUUID": "ff994565-edcb-42b1-8191-2271ac414d19",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Put user valid and change occupation and nationality",
              "fullTitle": "Put User Put user valid and change occupation and nationality",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let occupation = 'Researcher';\nlet nationality = 'Estonian';\nconst dataPut = dataPutDummy.dummyPutData(idData, occupation, nationality);\nlet response = await connectAPI.putData(dataPut);\nexpect(response.statusCode).to.equal(200);\nexpect(response.body.occupation).to.equal(occupation);\nexpect(response.body.nationality).to.equal(nationality);\nexpect(response.body).has.jsonSchema(jsonSchema);\n//chai-things and chai-like\nexpect(response.body.hobbies).contains.something.like('Charity')",
              "err": {},
              "uuid": "032aeb4f-0db2-4bac-a16a-6acbff1e719b",
              "parentUUID": "ff994565-edcb-42b1-8191-2271ac414d19",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Put user invalid and can't change occupation and nationality ",
              "fullTitle": "Put User Put user invalid and can't change occupation and nationality ",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let idInput = \"b27581ce-0a73-4890-8d47\";\nlet response = await connectAPI.getData(idInput);\nexpect(response.statusCode).to.not.equal(200);\nexpect(response.body.id).to.not.equal(idInput);\nexpect(response.body.errorCode).equal('ER-01');\nexpect(response.body.message).equal('user not found');",
              "err": {},
              "uuid": "9a0beb6d-93a9-4383-a4fe-18721c7deeb9",
              "parentUUID": "ff994565-edcb-42b1-8191-2271ac414d19",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "032aeb4f-0db2-4bac-a16a-6acbff1e719b",
            "9a0beb6d-93a9-4383-a4fe-18721c7deeb9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}